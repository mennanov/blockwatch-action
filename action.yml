name: 'Dependent blocks linter'
description: 'Runs the blockwatch linter to analyze dependent blocks of code'

inputs:
  extensions:
    description: 'Extensions to pass to blockwatch in the format "key1=value1,key2=value2"'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # ensures that git diff is available for previous commits

    - name: Install blockwatch
      run: |
        cargo install blockwatch
      shell: bash

    - name: Run blockwatch on diff
      id: diff # Optional: Give the step an ID if you need its output later
      run: |
        # Process extensions if provided
        EXTENSIONS=""
        if [[ -n "${{ inputs.extensions }}" ]]; then
          # Split by comma and create -E arguments
          IFS=',' read -ra EXT_PAIRS <<< "${{ inputs.extensions }}"
          for pair in "${EXT_PAIRS[@]}"; do
            EXTENSIONS="$EXTENSIONS -E $pair"
          done
        fi

        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          # For Pull Requests: Compare the target branch base with the PR head commit
          git diff --patch origin/${{ github.base_ref }}...${{ github.sha }} | blockwatch $EXTENSIONS

        elif [[ "${{ github.event_name }}" == "push" ]]; then
          # For Pushes: Compare the commit before the push with the current/after commit
          BEFORE_SHA="${{ github.event.before }}"
          CURRENT_SHA="${{ github.sha }}" # same as github.event.after for push events

          # Handle the initial push to a new branch where BEFORE_SHA is 0000...
          if [[ "$BEFORE_SHA" == "0000000000000000000000000000000000000000" ]]; then
            git show --patch $CURRENT_SHA | blockwatch $EXTENSIONS
          else
            git diff --patch $BEFORE_SHA...$CURRENT_SHA | blockwatch $EXTENSIONS
          fi

        else
          echo "Warning: Unsupported event type '${{ github.event_name }}'. Skipping diff."
        fi
      shell: bash
